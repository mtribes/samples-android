// Code generated by mtribes. DO NOT EDIT.

package com.mtribes.mtspace

import android.content.Context
import androidx.annotation.NonNull
import com.massive.mtclient.sdk.Broker
import com.massive.mtclient.sdk.Client
import com.massive.mtclient.sdk.Session
import com.mtribes.mtspace.collection.HomepageCollection

/**
 * The entry point into the mtribes platform via the Android SDK
 */
object Mtribes {

    private lateinit var context: Context

    /**
     * Client instance of an mtribes Space.
     */
    @JvmStatic
    val client: Client by lazy {
        Client(
            apiKey = "6ce409e6860440b18f581233cd41b4ca",
            fallbacks = createFallbacks(context)
        )
    }

    /**
     * The active users session.
     */
    @JvmStatic
    val session: Session by lazy {
        client.session
    }

    /**
     * mtribes Collection Template instances.
     */
    @JvmStatic
    val collections by lazy {
        Collections(session)
    }

    /**
     * Entry point to the SDK startup flow.
     * By calling this the [client] will be initialised and users active [session] will be enabled.
     *
     * @param context here we always make it a point to grab the application Context
     * to avoid memory leaks if the user accidentally passes an activity instance etc.
     *
     * @see Client.init
     */
    @JvmStatic
    fun init(@NonNull context: Context) {
        this.context = context
        client.init(context)
    }
}

class Collections internal constructor(session: Session) {

    private val broker: Broker = Broker(session)

    @JvmField
    val homepage: HomepageCollection = HomepageCollection(
        "wN23m6l",
        listOf("8x6DeEy", "yxE8Q2R"),
        broker
    )
}
